version: '3.8'
services:
  # Redis
  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data
    container_name: redis
    ports:
      - "6379:6379"

  # Database postgresql
  db:
    image: postgres
    restart: always
    volumes:
      # - ./data/db:/var/lib/postgresql/data #crea el volume dentro del mismo directorio
      - postgres_data:/var/lib/postgresql/data #guardar en volumes de container no en el mismo directorio
    environment:
      - POSTGRES_DB=diluprod21db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=Controwell.2020
    container_name: postgres_db
    ports:
      - "5432:5432"
  
  # PgAdmin4
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    volumes:
      # - ./data/pgadmin:/var/lib/pgadmin
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    container_name: pgadmin4
    ports:
      - "5050:80"
    depends_on:
      - db


  # Django App
  diluprod21:
    build: .
    volumes:
      - .:/diluprod21
    environment:
      - DATABASE_URL=postgres://root:Controwell.2020@db:5432/diluprod21db #db pq asi es el id el contenedor del que depende
      - DATABASE_HOST=db #db pq asi es el id el contenedor del que depende
      - DATABASE_PORT=5432
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@mycomany.com
      - REDIS_TLS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    image: angellomorales/diluprod21:V1.0 #para subir a dockerhub
    restart: always
    container_name: diluprod21_container #cambiar para estructura tag para docker hub para hacer push
    command: >
      sh -c "python manage.py waitdb --seconds 15 &&
             python manage.py migrate &&
             python manage.py initadmin &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
  
  # Celery
  celery:
    restart: always
    # build: 
    #   context: .#para recrear una imagen adicional basado en en la imagen de la app, crea una copia de la imagen
    image: angellomorales/diluprod21:V1.0
    command: celery -A diluprod21 worker -l INFO #se usa pq el entorno es linux, para windows: celery -A diluprod21 worker -l info --pool=solo
    volumes:
      - .:/diluprod21
    environment:
      - DATABASE_URL=postgres://root:Controwell.2020@db:5432/diluprod21db
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - C_FORCE_ROOT="true"
      - REDIS_TLS_URL=redis://redis:6379
    container_name: celery
    depends_on:
      - db
      - redis
      - diluprod21

#volumes como global dentro del docker      
volumes:
  postgres_data:
  pgadmin_data:
  redis_data: